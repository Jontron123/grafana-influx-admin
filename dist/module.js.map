{"version":3,"sources":["../src/module.js"],"names":["config","appEvents","PanelCtrl","_","moment","InfluxAdminCtrl","$scope","$injector","$q","$rootScope","$timeout","$http","uiSegmentSrv","datasourceSrv","get","injector","q","events","on","onInitEditMode","bind","onRender","onPanelInitalized","onRefresh","writing","history","defaults","mode","query","options","database","updateEvery","panel","dbs","forEach","datasources","val","key","type","defaultDatasource","unshift","push","isNil","datasource","length","txt","dbSeg","newSegment","querySeg","queryInfo","last","count","queries","isShowCurrentQueries","updateShowQueries","addEditorTab","editorTabIndex","console","log","writeDataText","error","then","ds","db","url","urls","method","data","headers","rsp","err","status","qinfo","emit","title","text","text2","icon","yesText","onConfirm","_seriesQuery","id","res","temp","results","series","values","durr","unit","mag","secs","parseInt","substring","lastId","Date","now","timer","value","configChanged","onQueryChanged","metricFindQuery","segs","click","startsWith","dbChanged","setQueryTemplate","str","split","i","when","isPostQuery","doSubmit","splice","pop","startTime","runningQuery","queryTime","message","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import config from 'app/core/config';\r\nimport appEvents from 'app/core/app_events';\r\n\r\nimport {PanelCtrl} from  'app/plugins/sdk';\r\n\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\n\r\nclass InfluxAdminCtrl extends PanelCtrl {\r\n  constructor($scope, $injector, $q, $rootScope, $timeout, $http, uiSegmentSrv) {\r\n    super($scope, $injector);\r\n    this.datasourceSrv = $injector.get('datasourceSrv');\r\n    this.injector = $injector;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.q = $q;\r\n    this.$timeout = $timeout;\r\n    this.$http = $http;\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('render', this.onRender.bind(this));\r\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\r\n    this.events.on('refresh', this.onRefresh.bind(this));\r\n\r\n    this.writing = false;\r\n    this.history = [  ];\r\n\r\n    // defaults configs\r\n    var defaults = {\r\n      mode: 'current', // 'write', 'query'\r\n      query: 'SHOW DIAGNOSTICS',\r\n      options: {\r\n        database: null\r\n      },\r\n      updateEvery: 1200\r\n    };\r\n    _.defaults(this.panel, defaults);\r\n\r\n\r\n    // All influxdb datasources\r\n    this.dbs = [];\r\n    _.forEach(config.datasources, (val, key) => {\r\n      if (\"influxdb\" == val.type) {\r\n        if(key == config.defaultDatasource) {\r\n          this.dbs.unshift(key);\r\n        }\r\n        else {\r\n          this.dbs.push(key);\r\n        }\r\n      }\r\n    });\r\n\r\n    // pick a datasource\r\n    if( _.isNil( this.panel.datasource ) ) {\r\n      if(this.dbs.length > 0) {\r\n        this.panel.datasource = this.dbs[0];\r\n      }\r\n    }\r\n    var txt = \"default\";\r\n    if(this.panel.options.database) {\r\n      txt = this.panel.options.database;\r\n    }\r\n    this.dbSeg = this.uiSegmentSrv.newSegment(txt);\r\n    this.querySeg = this.uiSegmentSrv.newSegment(this.panel.query);\r\n\r\n    this.queryInfo = {\r\n      last: 0,\r\n      count: 0,\r\n      queries: []\r\n    };\r\n\r\n    if(this.isShowCurrentQueries() && this.panel.updateEvery > 0) {\r\n      this.updateShowQueries();\r\n    }\r\n  }\r\n\r\n\r\n  isShowQueryWindow() {\r\n    return this.panel.mode == 'query';\r\n  }\r\n\r\n  isShowCurrentQueries() {\r\n    return this.panel.mode == 'current';\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/natel-influx-admin-panel/editor.html',1);\r\n    this.addEditorTab('Write Data', 'public/plugins/natel-influx-admin-panel/write.html',2);\r\n    this.editorTabIndex = 1;\r\n  }\r\n\r\n  writeData() {\r\n    console.log( \"WRITE\", this.writeDataText );\r\n    this.writing = true;\r\n    this.error = null;\r\n    return this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n      var db = this.panel.options.database;\r\n      if( !db) {\r\n        db = ds.database;\r\n      }\r\n      this.$http({\r\n        url: ds.urls[0] + '/write?db=' + db,\r\n        method: 'POST',\r\n        data: this.writeDataText,\r\n        headers: {\r\n          \"Content-Type\": \"plain/text\"\r\n        }\r\n      }).then((rsp) => {\r\n        this.writing = false;\r\n        console.log( \"OK\", rsp );\r\n      }, err => {\r\n        this.writing = false;\r\n        console.log( \"ERROR\", err );\r\n        this.error = err.data.error + \" [\"+err.status+\"]\";\r\n      });\r\n    });\r\n  }\r\n\r\n  askToKillQuery(qinfo) {\r\n    appEvents.emit('confirm-modal', {\r\n      title: 'Kill Influx Query',\r\n      text: 'Are you sure you want to kill this query?',\r\n      text2: qinfo.query,\r\n      icon: 'fa-trash',\r\n      //confirmText: 'yes',\r\n      yesText: 'Kill Query',\r\n      onConfirm: () => {\r\n        this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n          ds._seriesQuery( 'kill query '+qinfo.id, this.panel.options ).then( (res) => {\r\n            console.log( 'killed', qinfo, res );\r\n          });\r\n        });\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  updateShowQueries() {\r\n    this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n      ds._seriesQuery( 'SHOW QUERIES', this.panel.options ).then( (data) => {\r\n        var temp = [];\r\n        _.forEach(data.results[0].series[0].values, (res) => {\r\n\r\n          // convert the time (string) to seconds (so that sort works!)\r\n          let durr = res[3];\r\n          let unit = durr[durr.length - 1];\r\n          let mag = 0;\r\n          if(unit=='s') {\r\n            mag = 1;\r\n          }\r\n          else if(unit=='m') {\r\n            mag = 60;\r\n          }\r\n          else if(unit=='h') {\r\n            mag = 60*60;\r\n          }\r\n          let secs = parseInt( durr.substring(0,durr.length-1)) * mag;\r\n          if(secs == 0 && 'SHOW QUERIES' == res[1]) {\r\n            // Don't include the current query\r\n            this.queryInfo.lastId = res[0];\r\n          }\r\n          else {\r\n            temp.push( {\r\n              'secs': secs,\r\n              'time': res[3],\r\n              'query': res[1],\r\n              'db': res[2],\r\n              'id': res[0]\r\n            });\r\n          }\r\n        });\r\n\r\n        this.queryInfo.count++;\r\n        this.queryInfo.last = Date.now();\r\n        this.queryInfo.queries = temp;\r\n\r\n        // Check if we should refresh the view\r\n        if( this.isShowCurrentQueries() && this.panel.updateEvery>0 ) {\r\n          this.queryInfo.timer = this.$timeout( () => {\r\n            this.updateShowQueries()\r\n          }, this.panel.updateEvery);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  dbChanged() {\r\n    this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n      console.log( \"DB Changed\", this.dbSeg );\r\n      let db = this.dbSeg.value;\r\n      if(db === ds.database || db === \"default\") {\r\n        this.panel.options.database = null;\r\n      }\r\n      else {\r\n        this.panel.options.database = db;\r\n      }\r\n      this.configChanged();\r\n    });\r\n  }\r\n\r\n  configChanged() {\r\n    this.error = null;\r\n    if( this.isShowCurrentQueries() ) {\r\n      this.updateShowQueries();\r\n    }\r\n    else {\r\n      this.onQueryChanged();\r\n    }\r\n  }\r\n\r\n  getDBsegs() {\r\n    return this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n      return ds.metricFindQuery( \"SHOW DATABASES\", this.panel.options ).then((data) => {\r\n        var segs = [];\r\n        _.forEach(data, (val) => {\r\n          segs.push( this.uiSegmentSrv.newSegment( val.text ) );\r\n        });\r\n        return segs;\r\n      }, (err) => {\r\n        console.log( \"TODO... error???\", err);\r\n      });\r\n    });\r\n  }\r\n\r\n  getQueryTemplates() {\r\n    return [\r\n      { text: 'Show Databases',  click: \"ctrl.setQueryTemplate( 'SHOW DATABASES' );\" },\r\n      { text: 'Create Database', click: \"ctrl.setQueryTemplate( 'CREATE DATABASE &quot;db_name&quot;' );\" },\r\n      { text: 'Drop Database',   click: \"ctrl.setQueryTemplate( 'DROP DATABASE &quot;db_name&quot;' );\" },\r\n      { text: '--' },\r\n      { text: 'Show Measurements', click: \"ctrl.setQueryTemplate( 'SHOW MEASUREMENTS' );\" },\r\n      { text: 'Show Field Keys',   click: \"ctrl.setQueryTemplate( 'SHOW FIELD KEYS FROM &quot;measurement_name&quot;' );\" },\r\n      { text: 'Show Tag Keys',     click: \"ctrl.setQueryTemplate( 'SHOW TAG KEYS FROM &quot;measurement_name&quot;' );\" },\r\n      { text: 'Show Tag Values',   click: \"ctrl.setQueryTemplate( 'SHOW TAG VALUES FROM &quot;measurement_name&quot; WITH KEY = &quot;tag_key&quot;' );\" },\r\n      { text: 'Drop Measurement',  click: \"ctrl.setQueryTemplate( 'DROP MEASUREMENT &quot;measurement_name&quot;' );\" },\r\n      { text: '--' },\r\n      { text: 'Show Retention Policies', click: \"ctrl.setQueryTemplate( 'SHOW RETENTION POLICIES ON &quot;db_name&quot;' );\" },\r\n      { text: 'Create Retention Policy', click: \"ctrl.setQueryTemplate( 'CREATE RETENTION POLICY &quot;rp_name&quot; ON &quot;db_name&quot; DURATION 30d REPLICATION 1 DEFAULT' );\" },\r\n      { text: 'Drop Retention Policy',   click: \"ctrl.setQueryTemplate( 'DROP RETENTION POLICY &quot;rp_name&quot; ON &quot;db_name&quot;' );\" },\r\n      { text: '--' },\r\n      { text: 'Show Continuous Queries', click: \"ctrl.setQueryTemplate( 'SHOW CONTINUOUS QUERIES' );\" },\r\n      { text: 'Create Continuous Query', click: \"ctrl.setQueryTemplate( 'CREATE CONTINUOUS QUERY &quot;cq_name&quot; ON &quot;db_name&quot; BEGIN SELECT min(&quot;field&quot;) INTO &quot;target_measurement&quot; FROM &quot;current_measurement&quot; GROUP BY time(30m) END' );\" },\r\n      { text: 'Drop Continuous Query',   click: \"ctrl.setQueryTemplate( 'DROP CONTINUOUS QUERY &quot;cq_name&quot; ON &quot;db_name&quot;' );\" },\r\n      { text: '--' },\r\n      { text: 'Show Users',        click: \"ctrl.setQueryTemplate( 'SHOW USERS' );\" },\r\n  //  { text: 'Create User',       click: \"ctrl.query = 'CREATE USER &quot;username&quot; WITH PASSWORD &apos;password&apos;\" },\r\n  //  { text: 'Create Admin User', click: \"ctrl.query = 'CREATE USER &quot;username&quot; WITH PASSWORD 'password' WITH ALL PRIVILEGES\" },\r\n      { text: 'Drop User',         click: \"ctrl.setQueryTemplate( 'DROP USER &quot;username&quot;' );\" },\r\n      { text: '--' },\r\n      { text: 'Show Stats',       click: \"ctrl.setQueryTemplate( 'SHOW STATS' );\" },\r\n      { text: 'Show Diagnostics', click: \"ctrl.setQueryTemplate( 'SHOW DIAGNOSTICS' );\" }\r\n    ];\r\n  }\r\n\r\n  setQueryTemplate(txt) {\r\n    this.querySeg = this.uiSegmentSrv.newSegment( txt );\r\n    this.onQueryChanged();\r\n  }\r\n\r\n  isClickableQuery() {\r\n    if( \"SHOW DATABASES\" == this.panel.query) {\r\n      return true;\r\n    }\r\n    if( \"SHOW MEASUREMENTS\" == this.panel.query) {\r\n      return true;\r\n    }\r\n    if( this.panel.query.startsWith( 'SHOW FIELD KEYS FROM \"')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onClickedResult(res) {\r\n    console.log( \"CLICKED\", this.panel.query, res );\r\n\r\n    if( \"SHOW DATABASES\" == this.panel.query) {\r\n      this.querySeg = this.uiSegmentSrv.newSegment( 'SHOW MEASUREMENTS' );\r\n      this.dbSeg = this.uiSegmentSrv.newSegment( res[0] );\r\n      this.dbChanged();\r\n    }\r\n    else if( \"SHOW MEASUREMENTS\" == this.panel.query) {\r\n      this.setQueryTemplate( 'SHOW FIELD KEYS FROM \"' + res[0] +'\"' );\r\n    }\r\n    else if( this.panel.query.startsWith( 'SHOW FIELD KEYS FROM \"')) {\r\n      var str = this.panel.query.split(/\"/)[1];\r\n      this.setQueryTemplate( 'SELECT \"' + res[0] +'\" FROM \"' + str +'\" ORDER BY time desc LIMIT 10' );\r\n    }\r\n    return;\r\n  }\r\n\r\n  isPostQuery() {\r\n    var q = this.querySeg.value;\r\n    return !(\r\n      q.startsWith( \"SELECT \" ) ||\r\n      q.startsWith( \"SHOW \" ));\r\n  }\r\n\r\n  getQueryHistory() {\r\n    var segs = [];\r\n    for(let i=0; i<this.history.length; i++) {\r\n      segs.push( this.uiSegmentSrv.newSegment( this.history[i] ) );\r\n    }\r\n    return this.q.when( segs );\r\n  }\r\n\r\n  onQueryChanged() {\r\n    this.querySeg = this.uiSegmentSrv.newSegment( this.querySeg.value );\r\n    console.log(\"onQueryChanged()\", this.querySeg );\r\n    this.rsp = null;\r\n    if(!this.isPostQuery()) {\r\n      this.doSubmit();\r\n    }\r\n  }\r\n\r\n  doSubmit() {\r\n\r\n    let q = this.querySeg.value;\r\n    this.panel.query = q;\r\n    console.log(\"doSubmit()\", this );\r\n\r\n    this.history.unshift( q );\r\n    for(let i=1; i<this.history.length; i++) {\r\n      if(this.history[i] === q) {\r\n        this.history.splice(i,1);\r\n        break;\r\n      }\r\n    }\r\n    if(this.history.length > 15) {\r\n      this.history.pop();\r\n    }\r\n\r\n    var startTime = Date.now();\r\n    this.error = null;\r\n    this.runningQuery = true;\r\n    this.datasourceSrv.get(this.panel.datasource).then( (ds) => {\r\n      console.log( 'doSubmit >>>', ds, this.panel.query, this.panel.options);\r\n      ds._seriesQuery( this.panel.query, this.panel.options ).then((data) => {\r\n        console.log(\"RSP\", this.panel.query, data);\r\n        this.rsp = data;\r\n        this.runningQuery = false;\r\n        this.queryTime = (Date.now() - startTime) / 1000.0;\r\n      }, (err) => {\r\n       // console.log( 'ERROR with series query', err );\r\n        this.runningQuery = false;\r\n        this.error = err.message;\r\n        this.queryTime = (Date.now() - startTime) / 1000.0;\r\n      });\r\n    });\r\n  }\r\n\r\n  onPanelInitalized() {\r\n    //console.log(\"onPanelInitalized()\")\r\n    this.onQueryChanged();\r\n  }\r\n\r\n  onRender() {\r\n    //console.log(\"onRender\");\r\n  }\r\n\r\n  onRefresh() {\r\n    if( this.isShowCurrentQueries() ) {\r\n      this.updateShowQueries();\r\n    }\r\n    //console.log(\"onRefresh\");\r\n  }\r\n}\r\nInfluxAdminCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n  InfluxAdminCtrl as PanelCtrl\r\n};\r\n\r\n\r\n"]}